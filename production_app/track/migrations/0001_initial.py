# Generated by Django 4.2.14 on 2024-07-10 13:37

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom du département')),
            ],
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theoretical_goal', models.IntegerField(default=33, verbose_name='Objectif théorique')),
                ('planned_goal', models.IntegerField(blank=True, null=True, verbose_name='Objectif planifié')),
            ],
        ),
        migrations.CreateModel(
            name='UEP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name="Nom de l'UEP")),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='track.department', verbose_name='Département')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='track.goal', verbose_name='Objectif')),
            ],
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_products', models.IntegerField(verbose_name='Nombre de produits')),
                ('shift', models.CharField(choices=[('A', 'Shift A'), ('B', 'Shift B'), ('C', 'Shift C')], max_length=20, verbose_name='Shift')),
                ('hour', models.TimeField(verbose_name='Heure')),
                ('uep', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='track.uep', verbose_name='UEP')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
        ),
        migrations.CreateModel(
            name='Loss',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logistic_loss', models.FloatField(default=0, help_text='Perte due à la logistique', verbose_name='Perte logistique')),
                ('production_loss', models.FloatField(default=0, help_text='Perte due à la production', verbose_name='Perte de production')),
                ('logistic_comment', models.TextField(blank=True, help_text='Raison de la perte logistique', verbose_name='Commentaire logistique')),
                ('production_comment', models.TextField(blank=True, help_text='Raison de la perte de production', verbose_name='Commentaire de production')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='track.record', verbose_name='Enregistrement')),
            ],
        ),
    ]
